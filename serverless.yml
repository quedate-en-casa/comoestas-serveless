org: agudelocontrerasj
app: comoestasserverlesscrud-dev-app
service: comoestasserverlesscrud-dev

provider:
    name: aws
    runtime: nodejs10.x
    profile: karibu
    region: us-east-1
    environment:
        tableName: ${self:custom.tableName}
        tableDoctor: ${self:custom.tableDoctor}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
          Resource: '*'

plugins:
    - serverless-s3-sync
    - serverless-webpack

package:
    individually: true

custom:
    tableName: patient-register
    tableDoctor: doctor-comoestas
    s3Sync:
        - bucketName: comoestasserverlesscrud-devuploadbucket-12312
          localDir: UploadData

functions:
    getPatientRegister:
        handler: lambdas/endpoints/getPatientRegister.handler
        events:
            - http:
                path: get-patient-register/{ID}
                method: GET
                caching:
                    enabled: true
                provisionedConcurrency: 3
                reservedConcurrency: 5
                cors: true
    getDoctor:
        handler: lambdas/endpoints/getDoctor.handler
        events:
            - http:
                path: get-doctor/{ID}
                method: GET
                caching:
                    enabled: true
                provisionedConcurrency: 3
                reservedConcurrency: 5
                cors: true
    getPatientRegistersByRut:
        handler: lambdas/endpoints/getPatientRegistersByRut.handler
        events:
            - http:
                path: get-patient-register-by-rut/{rut}
                method: GET
                caching:
                    enabled: true
                provisionedConcurrency: 3
                reservedConcurrency: 5
                cors: true
    createPatientRegister:
        handler: lambdas/endpoints/createPatientRegister.handler
        events:
            - http:
                path: create-patient-register/{ID}
                method: POST
                caching:
                    enabled: true
                provisionedConcurrency: 3
                reservedConcurrency: 5
                cors: true
    createDoctor:
        handler: lambdas/endpoints/createDoctor.handler
        events:
            - http:
                path: create-doctor/{ID}
                method: POST
                caching:
                    enabled: true
                provisionedConcurrency: 3
                reservedConcurrency: 5
                cors: true
resources:
    Resources:
        DemoBucketUpload:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: comoestasserverlesscrud-devuploadbucket-12312
        MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        DoctorTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableDoctor}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
        